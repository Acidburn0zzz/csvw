test,name,comment,approval,rdf,json,validate,test-type,action-metadata,user-metadata,link-metadata,file-metadata,directory-metadata,extratest001,Simple table,The simplest possible table without metadata,,TRUE,TRUE,TRUE,,FALSE,FALSE,FALSE,FALSE,FALSE,test002,Quoted field,Table with one quoted field without metadata,,TRUE,TRUE,TRUE,,FALSE,FALSE,FALSE,FALSE,FALSE,test003,Surrounding spaces,Table with whitespace before and after every field without metadata,,TRUE,TRUE,TRUE,,FALSE,FALSE,FALSE,FALSE,FALSE,test005,Identifier references,A table with entity identifiers and references to other entities without metadata,,TRUE,TRUE,TRUE,,FALSE,FALSE,FALSE,FALSE,FALSE,test006,No identifiers,Records contain two entities with relationships which are duplicated without metadata,,TRUE,TRUE,TRUE,,FALSE,FALSE,FALSE,FALSE,FALSE,test007,Joined table with unique identifiers,Joined data with identified records without metadata,,TRUE,TRUE,TRUE,,FALSE,FALSE,FALSE,FALSE,FALSE,test008,Microsyntax - internal field separator,One field has comma-separated values without metadata,,TRUE,TRUE,TRUE,,FALSE,FALSE,FALSE,FALSE,FALSE,test009,Microsyntax - formatted time,Field with parseable human formatted time without metadata,,TRUE,TRUE,TRUE,,FALSE,FALSE,FALSE,FALSE,FALSE,test010,Country-codes-and-names example,Country-codes-and-names example,,TRUE,TRUE,TRUE,,FALSE,FALSE,FALSE,FALSE,FALSE,test011,tree-ops example with metadata,tree-ops example with metadata. Processors should load metadata based on action URL.,,TRUE,TRUE,TRUE,,FALSE,FALSE,FALSE,TRUE,FALSE,"dir=true action=""test011/tree-ops.csv"""test012,tree-ops example with directory metadata,tree-ops example with directory metadata. Processors should find directory-based metadata.,,TRUE,TRUE,TRUE,,FALSE,FALSE,FALSE,FALSE,TRUE,"dir=true action=""test012/tree-ops.csv"""test013,tree-ops example from user metadata,tree-ops example from user metadata.,,TRUE,TRUE,TRUE,,FALSE,TRUE,FALSE,FALSE,FALSE,"action=""tree-ops.csv"""test014,tree-ops example with linked metadata,tree-ops example with linked metadata. Processors load metadata from link header.,,TRUE,TRUE,TRUE,,FALSE,FALSE,TRUE,FALSE,FALSE,"dir=true action=""test014/tree-ops.csv"""test015,tree-ops example with user and directory metadata,tree-ops example with user and directory metadata. Processors should find directory-based metadata.,,TRUE,TRUE,TRUE,,FALSE,TRUE,FALSE,FALSE,TRUE,"dir=true action=""test015/tree-ops.csv"""test016,tree-ops example with linked and directory metadata,tree-ops example with linked and directory metadata. Processors should find link- and directory-based metadata.,,TRUE,TRUE,TRUE,,FALSE,FALSE,TRUE,FALSE,TRUE,"dir=true action=""test016/tree-ops.csv"""test017,tree-ops example with file and directory metadata,tree-ops example with file and directory metadata. Processors should find file- and directory-based metadata.,,TRUE,TRUE,TRUE,,FALSE,FALSE,FALSE,TRUE,TRUE,"dir=true action=""test017/tree-ops.csv"""test018,"tree-ops example with user, file and directory metadata","tree-ops example with user, file and directory metadata. Processors should find user-, file- and directory-based metadata.",,TRUE,TRUE,TRUE,,FALSE,TRUE,FALSE,TRUE,TRUE,"dir=true action=""test018/tree-ops.csv"""test019,no header,"If a CSV+ file does not include a header line, this MUST be specified using the `header` parameter.",,TRUE,TRUE,TRUE,,FALSE,FALSE,FALSE,FALSE,FALSE,"action=""tree-ops.csv"" contentType=""text/csv;header=absent"""test020,dialect: trim=start,"If `trim` is `true` or ""start"" then whitespace from the start of values that are not enclosed MUST be removed from the value.",,TRUE,TRUE,TRUE,,TRUE,FALSE,FALSE,FALSE,FALSE,test021,dialect: trim=end,"If `trim` is `true` or ""end"" then whitespace from the end of values that are not enclosed MUST be removed from the value.",,TRUE,TRUE,TRUE,,TRUE,FALSE,FALSE,FALSE,FALSE,test022,dialect: trim=true,"If `trim` is `true` or ""start"" then whitespace from the start of values that are not enclosed MUST be removed from the value. If `trim` is `true` or ""end"" then whitespace from the end of values that are not enclosed MUST be removed from the value.",,TRUE,TRUE,TRUE,,TRUE,FALSE,FALSE,FALSE,FALSE,test023,dialect: header=false,"If `true`, sets the `header row count` flag to 1, and if `false` to 0, unless `headerRowCount` is provided, in which case the value provided for the `header` property is ignored.",,TRUE,TRUE,TRUE,,FALSE,TRUE,FALSE,FALSE,FALSE,"action=""tree-ops.csv"""test024,dialect: header=false and headerRowCount=1,"If `true`, sets the `header row count` flag to 1, and if `false` to 0, unless `headerRowCount` is provided, in which case the value provided for the `header` property is ignored.",,TRUE,TRUE,TRUE,,FALSE,TRUE,FALSE,FALSE,FALSE,"action=""tree-ops.csv"""test025,dialect: header=false and skipRows=1,Ignore header uses column definitions from metadata,,TRUE,TRUE,TRUE,,FALSE,TRUE,FALSE,FALSE,FALSE,"action=""tree-ops.csv"""test026,tree-ops example with directory metadata,tree-ops example with directory metadata. Processors should find directory-based metadata.,,TRUE,TRUE,TRUE,,TRUE,FALSE,FALSE,FALSE,TRUE,"action=""test026/metadata.json"" implicit=""test026/tree-ops.csv"""test027,tree-ops minimal output,tree-ops example with metadata. Minimal output mode,,TRUE,TRUE,TRUE,,FALSE,TRUE,FALSE,FALSE,FALSE,"minimal=true action=""tree-ops.csv"""test028,countries.csv example,countries.csv example with no metadata,,TRUE,TRUE,TRUE,,FALSE,FALSE,FALSE,FALSE,FALSE,"action=""countries.csv"""test029,countries.csv minimal,countries.csv example with no metadata and minimal output,,TRUE,TRUE,TRUE,,FALSE,FALSE,FALSE,FALSE,FALSE,"action=""countries.csv"" minimal=true"test030,countries.json example,countries.json from metadata,,TRUE,TRUE,TRUE,,TRUE,FALSE,FALSE,FALSE,FALSE,"action=""countries.json"" implicit=""countries.csv,country_slice.csv"""test031,countries.json example minimal output,countries.json from metadata minimal output,,TRUE,TRUE,TRUE,,TRUE,FALSE,FALSE,FALSE,FALSE,"minimal=true action=""countries.json"" implicit=""countries.csv,country_slice.csv"""test032,events-listing.csv example,"events-listing example with file metadata, virtual columns and multiple subjects per row",,TRUE,TRUE,TRUE,,TRUE,FALSE,FALSE,TRUE,FALSE,"dir=true implicit=""test032/events-listing.csv"""test033,events-listing.csv minimal output,"events-listing example with file metadata, virtual columns and multiple subjects per row; minimal output",,TRUE,TRUE,TRUE,,TRUE,FALSE,FALSE,TRUE,FALSE,"minimal=true dir=true implicit=""test033/events-listing.csv"""test034,roles example,Public Sector Roles example with referenced schemas,,TRUE,TRUE,TRUE,,TRUE,FALSE,FALSE,FALSE,FALSE,"dir=true implicit=""test034/senior-roles.csv,test034/junior-roles.csv,test034/gov.uk/data/organizations.csv,test034/gov.uk/data/professions.csv,test034/gov.uk/schema/junior-roles.json,test034/gov.uk/schema/senior-roles.json,test034/gov.uk/schema/organizations.json,test034/gov.uk/schema/professions.json"""test035,roles minimal,Public Sector Roles example with referenced schemas; minimal output,,TRUE,TRUE,TRUE,,TRUE,FALSE,FALSE,FALSE,FALSE,"minimal=true dir=true implicit=""test035/senior-roles.csv,test035/junior-roles.csv,test035/gov.uk/data/organizations.csv,test035/gov.uk/data/professions.csv,test035/gov.uk/schema/junior-roles.json,test035/gov.uk/schema/senior-roles.json,test035/gov.uk/schema/organizations.json,test035/gov.uk/schema/professions.json"""test036,tree-ops-ext example,tree-ops extended example,,TRUE,TRUE,TRUE,,FALSE,FALSE,FALSE,TRUE,FALSE,"dir=true action=""test036/tree-ops-ext.csv"""test037,tree-ops-ext minimal,tree-ops extended example; minimal output,,TRUE,TRUE,TRUE,,FALSE,FALSE,FALSE,TRUE,FALSE,"minimal=true dir=true action=""test037/tree-ops-ext.csv"""test038,inherited properties propagation,Setting inherited properties at different levels inherit to cell,,TRUE,TRUE,TRUE,,TRUE,FALSE,FALSE,FALSE,FALSE,test039,valid inherited properties,Different combinations of valid inherited properties,,TRUE,TRUE,TRUE,,TRUE,FALSE,FALSE,FALSE,FALSE,test040,invalid null,Metadata generates warning and uses default with invalid `null` value,,TRUE,TRUE,TRUE,warning,TRUE,FALSE,FALSE,FALSE,FALSE,test041,invalid lang,Metadata generates warning and uses default with invalid `lang` value,,TRUE,TRUE,TRUE,warning,TRUE,FALSE,FALSE,FALSE,FALSE,test042,invalid textDirection,Metadata generates warning and uses default with invalid `textDirection`,,TRUE,TRUE,TRUE,warning,TRUE,FALSE,FALSE,FALSE,FALSE,test043,invalid separator,Metadata generates warning and uses default with invalid `separator`,,TRUE,TRUE,TRUE,warning,TRUE,FALSE,FALSE,FALSE,FALSE,test044,invalid ordered,Metadata generates warning and uses default with invalid `ordered`,,TRUE,TRUE,TRUE,warning,TRUE,FALSE,FALSE,FALSE,FALSE,test045,invalid default,Metadata generates warning and uses default with invalid `default`,,TRUE,TRUE,TRUE,warning,TRUE,FALSE,FALSE,FALSE,FALSE,test046,invalid dataype,Metadata generates warning and uses default with invalid `dataype`,,TRUE,TRUE,TRUE,warning,TRUE,FALSE,FALSE,FALSE,FALSE,test047,invalid aboutUrl,"If the supplied value of a URI template property is not a string (eg if it is an integer), compliant applications must issue a warning and proceed as if the property had been supplied with an empty string.",,TRUE,TRUE,TRUE,warning,TRUE,FALSE,FALSE,FALSE,FALSE,test048,invalid propertyUrl,"If the supplied value of a URI template property is not a string (eg if it is an integer), compliant applications must issue a warning and proceed as if the property had been supplied with an empty string.",,TRUE,TRUE,TRUE,warning,TRUE,FALSE,FALSE,FALSE,FALSE,test049,invalid valueUrl,"If the supplied value of a URI template property is not a string (eg if it is an integer), compliant applications must issue a warning and proceed as if the property had been supplied with an empty string.",,TRUE,TRUE,TRUE,warning,TRUE,FALSE,FALSE,FALSE,FALSE,test050,dialect: delimiter,Recognizes tab-separated-values with appropriate `delimiter`,,TRUE,TRUE,TRUE,,TRUE,FALSE,FALSE,FALSE,FALSE,"implicit=""tree-ops.tsv"""test051,dialect: commentPrefix in header,Adds comments when found in `skipRows`,,TRUE,TRUE,TRUE,,TRUE,FALSE,FALSE,FALSE,FALSE,test052,dialect: commentPrefix in rows,Adds comments when found in `content`,,TRUE,TRUE,TRUE,,TRUE,FALSE,FALSE,FALSE,FALSE,test054,dialect: skipColumns,Ignores skipped columns,,TRUE,TRUE,TRUE,,TRUE,FALSE,FALSE,FALSE,FALSE,"implicit=""tree-ops.csv"""test055,dialect: skipBlankRows,Ignores rows in which all columns are empty,,TRUE,TRUE,TRUE,,TRUE,FALSE,FALSE,FALSE,FALSE,test056,dialect: skipInitialSpace,"Equivalent to` trim=""start""`",,TRUE,TRUE,TRUE,,TRUE,FALSE,FALSE,FALSE,FALSE,test057,dialect as URL reference,Loads a `dialect description` if referenced using a URL,,TRUE,TRUE,TRUE,,TRUE,FALSE,FALSE,FALSE,FALSE,"implicit=""test057.csv,test057-dialect.json"""test058,table dialect vs tablegroup dialect,A dialect defined in a Table completely overrides that defined in a TableGroup,,TRUE,TRUE,TRUE,,TRUE,FALSE,FALSE,FALSE,FALSE,test059,dialect: invalid commentPrefix,Metadata generates warning and uses default with invalid `commentPrefix` value,,TRUE,TRUE,TRUE,warning,TRUE,FALSE,FALSE,FALSE,FALSE,"implicit=""tree-ops.csv"""test060,dialect: invalid delimiter,Metadata generates warning and uses default with invalid `delimiter` value,,TRUE,TRUE,TRUE,warning,TRUE,FALSE,FALSE,FALSE,FALSE,"implicit=""tree-ops.csv"""test061,dialect: invalid doubleQuote,Metadata generates warning and uses default with invalid `doubleQuote` value,,TRUE,TRUE,TRUE,warning,TRUE,FALSE,FALSE,FALSE,FALSE,"implicit=""tree-ops.csv"""test062,dialect: invalid encoding,Metadata generates warning and uses default with invalid `encoding` value,,TRUE,TRUE,TRUE,warning,TRUE,FALSE,FALSE,FALSE,FALSE,"implicit=""tree-ops.csv"""test063,dialect: invalid header,Metadata generates warning and uses default with invalid `header` value,,TRUE,TRUE,TRUE,warning,TRUE,FALSE,FALSE,FALSE,FALSE,"implicit=""tree-ops.csv"""test065,dialect: invalid headerRowCount,Metadata generates warning and uses default with invalid `headerRowCount` value,,TRUE,TRUE,TRUE,warning,TRUE,FALSE,FALSE,FALSE,FALSE,"implicit=""tree-ops.csv"""test066,dialect: invalid lineTerminators,Metadata generates warning and uses default with invalid `lineTerminators` value,,TRUE,TRUE,TRUE,warning,TRUE,FALSE,FALSE,FALSE,FALSE,"implicit=""tree-ops.csv"""test067,dialect: invalid quoteChar,Metadata generates warning and uses default with invalid `quoteChar` value,,TRUE,TRUE,TRUE,warning,TRUE,FALSE,FALSE,FALSE,FALSE,"implicit=""tree-ops.csv"""test068,dialect: invalid skipBlankRows,Metadata generates warning and uses default with invalid `skipBlankRows` value,,TRUE,TRUE,TRUE,warning,TRUE,FALSE,FALSE,FALSE,FALSE,"implicit=""tree-ops.csv"""test069,dialect: invalid skipColumns,Metadata generates warning and uses default with invalid `skipColumns` value,,TRUE,TRUE,TRUE,warning,TRUE,FALSE,FALSE,FALSE,FALSE,"implicit=""tree-ops.csv"""test070,dialect: invalid skipInitialSpace,Metadata generates warning and uses default with invalid `skipInitialSpace` value,,TRUE,TRUE,TRUE,warning,TRUE,FALSE,FALSE,FALSE,FALSE,"implicit=""tree-ops.csv"""test071,dialect: invalid skipRows,Metadata generates warning and uses default with invalid `skipRows` value,,TRUE,TRUE,TRUE,warning,TRUE,FALSE,FALSE,FALSE,FALSE,"implicit=""tree-ops.csv"""test072,dialect: invalid trim,Metadata generates warning and uses default with invalid `trim` value,,TRUE,TRUE,TRUE,warning,TRUE,FALSE,FALSE,FALSE,FALSE,"implicit=""tree-ops.csv"""test073,invalid @language,The value of `@language` MUST be a valid `BCP47` language code,,TRUE,TRUE,TRUE,warning,TRUE,FALSE,FALSE,FALSE,FALSE,"implicit=""tree-ops.csv"""test074,empty tables,Compliant application must raise an error if this array does not contain one or more `table descriptions`.,,FALSE,FALSE,TRUE,negative,TRUE,FALSE,FALSE,FALSE,FALSE,"implicit=""tree-ops.csv"""test075,invalid tableGroup tableDirection,"An atomic property that must have a single string value that is one of ""rtl"", ""ltr"" or ""default"".",,TRUE,TRUE,TRUE,warning,TRUE,FALSE,FALSE,FALSE,FALSE,"implicit=""tree-ops.csv"""test076,invalid table tableDirection,"An atomic property that must have a single string value that is one of ""rtl"", ""ltr"" or ""default"".",,TRUE,TRUE,TRUE,warning,TRUE,FALSE,FALSE,FALSE,FALSE,"implicit=""tree-ops.csv"""test077,invalid tableGroup @id,It must not start with `_:.`,,FALSE,FALSE,TRUE,negative,TRUE,FALSE,FALSE,FALSE,FALSE,"implicit=""tree-ops.csv"""test078,invalid table @id,It must not start with `_:.`,,FALSE,FALSE,TRUE,negative,TRUE,FALSE,FALSE,FALSE,FALSE,"implicit=""tree-ops.csv"""test079,invalid schema @id,It must not start with `_:.`,,FALSE,FALSE,TRUE,negative,TRUE,FALSE,FALSE,FALSE,FALSE,"implicit=""tree-ops.csv"""test080,invalid column @id,It must not start with `_:.`,,FALSE,FALSE,TRUE,negative,TRUE,FALSE,FALSE,FALSE,FALSE,"implicit=""tree-ops.csv"""test081,invalid dialect @id,It must not start with `_:.`,,FALSE,FALSE,TRUE,negative,TRUE,FALSE,FALSE,FALSE,FALSE,"implicit=""tree-ops.csv"""test082,invalid template @id,It must not start with `_:.`,,FALSE,FALSE,TRUE,negative,TRUE,FALSE,FALSE,FALSE,FALSE,"implicit=""tree-ops.csv"""test083,invalid tableGroup @type,If included `@type` must be `TableGroup`,,FALSE,FALSE,TRUE,negative,TRUE,FALSE,FALSE,FALSE,FALSE,"implicit=""tree-ops.csv"""test084,invalid table @type,If included `@type` must be `Table`,,FALSE,FALSE,TRUE,negative,TRUE,FALSE,FALSE,FALSE,FALSE,"implicit=""tree-ops.csv"""test085,invalid schema @type,If included `@type` must be `Schema`,,FALSE,FALSE,TRUE,negative,TRUE,FALSE,FALSE,FALSE,FALSE,"implicit=""tree-ops.csv"""test086,invalid column @type,If included `@type` must be `Column`,,FALSE,FALSE,TRUE,negative,TRUE,FALSE,FALSE,FALSE,FALSE,"implicit=""tree-ops.csv"""test087,invalid dialect @type,If included `@type` must be `Dialect`,,FALSE,FALSE,TRUE,negative,TRUE,FALSE,FALSE,FALSE,FALSE,"implicit=""tree-ops.csv"""test088,invalid template @type,If included `@type` must be `Template`,,FALSE,FALSE,TRUE,negative,TRUE,FALSE,FALSE,FALSE,FALSE,"implicit=""tree-ops.csv"""test089,missing tables in TableGroup,The `tables` property is required in a `TableGroup`,,FALSE,FALSE,TRUE,negative,TRUE,FALSE,FALSE,FALSE,FALSE,"implicit=""tree-ops.csv"""test090,missing url in Table,The `url` property is required in a `Table`,,FALSE,FALSE,TRUE,negative,TRUE,FALSE,FALSE,FALSE,FALSE,"implicit=""tree-ops.csv"""test091,same number of columns in each row,each `row` MUST contain the same number of cells (although some of these cells may be empty),,FALSE,FALSE,TRUE,negative,FALSE,FALSE,FALSE,FALSE,FALSE,"implicit=""tree-ops.csv"""test092,invalid JSON,All compliant applications MUST generate errors and stop processing if a metadata document does not use valid JSON syntax,,FALSE,FALSE,TRUE,negative,TRUE,FALSE,FALSE,FALSE,FALSE,"implicit=""tree-ops.csv"""test093,undefined properties,Compliant applications MUST ignore properties (aside from _common properties_) which are not defined in this specification and MUST generate a warning when they are encoutered,,TRUE,TRUE,TRUE,warning,TRUE,FALSE,FALSE,FALSE,FALSE,"implicit=""tree-ops.csv"""test094,inconsistent array values: tables,Any items within an array that are not valid objects of the type expected are ignored,,FALSE,FALSE,TRUE,negative,TRUE,FALSE,FALSE,FALSE,FALSE,"implicit=""tree-ops.csv"""test095,inconsistent array values: transformations,Any items within an array that are not valid objects of the type expected are ignored,,TRUE,TRUE,TRUE,warning,TRUE,FALSE,FALSE,FALSE,FALSE,"implicit=""tree-ops.csv"""test096,inconsistent array values: columns,Any items within an array that are not valid objects of the type expected are ignored,,FALSE,FALSE,TRUE,negative,TRUE,FALSE,FALSE,FALSE,FALSE,"implicit=""tree-ops.csv"""test097,inconsistent array values: foreignKeys,Any items within an array that are not valid objects of the type expected are ignored,,TRUE,TRUE,TRUE,warning,TRUE,FALSE,FALSE,FALSE,FALSE,"implicit=""countries.csv,country_slice.csv"""test098,inconsistent array values: tables,"If the supplied value of an array property is not an array (eg if it is an integer), compliant applications must issue a warning and proceed as if the property had been supplied with an empty array",,TRUE,TRUE,TRUE,warning,TRUE,FALSE,FALSE,FALSE,FALSE,"implicit=""tree-ops.csv"""test099,inconsistent array values: transformations,"If the supplied value of an array property is not an array (eg if it is an integer), compliant applications must issue a warning and proceed as if the property had been supplied with an empty array",,TRUE,TRUE,TRUE,warning,TRUE,FALSE,FALSE,FALSE,FALSE,"implicit=""tree-ops.csv"""test100,inconsistent array values: columns,"If the supplied value of an array property is not an array (eg if it is an integer), compliant applications must issue a warning and proceed as if the property had been supplied with an empty array",,FALSE,FALSE,TRUE,negative,TRUE,FALSE,FALSE,FALSE,FALSE,"implicit=""tree-ops.csv"""test101,inconsistent array values: foreignKeys,"If the supplied value of an array property is not an array (eg if it is an integer), compliant applications must issue a warning and proceed as if the property had been supplied with an empty array",,TRUE,TRUE,TRUE,warning,TRUE,FALSE,FALSE,FALSE,FALSE,"implicit=""tree-ops.csv"""test102,inconsistent link values: @id,"If the supplied value of a link property is not a string (eg if it is an integer), compliant applications must issue a warning and proceed as if the property had been supplied with an empty string",,TRUE,TRUE,TRUE,warning,TRUE,FALSE,FALSE,FALSE,FALSE,"implicit=""tree-ops.csv"""test103,inconsistent link values: url,"If the supplied value of a link property is not a string (eg if it is an integer), compliant applications must issue a warning and proceed as if the property had been supplied with an empty string",,FALSE,FALSE,TRUE,negative,TRUE,FALSE,FALSE,FALSE,FALSE,"implicit=""tree-ops.csv"""test104,invalid columnReference,The referenced description object must have a name property,,FALSE,FALSE,TRUE,negative,TRUE,FALSE,FALSE,FALSE,FALSE,"implicit=""countries.csv,country_slice.csv"""test105,invalid primaryKey,The referenced description object must have a name property,,FALSE,FALSE,TRUE,negative,TRUE,FALSE,FALSE,FALSE,FALSE,"implicit=""tree-ops.csv"""test106,invalid dialect,"If the supplied value of an object property is not a string or object (eg if it is an integer), compliant applications MUST issue a warning and proceed as if the property had been specified as an object with no properties.",,TRUE,TRUE,TRUE,warning,TRUE,FALSE,FALSE,FALSE,FALSE,"implicit=""tree-ops.csv"""test107,invalid tableSchema,"If the supplied value of an object property is not a string or object (eg if it is an integer), compliant applications MUST issue a warning and proceed as if the property had been specified as an object with no properties.",,FALSE,FALSE,TRUE,negative,TRUE,FALSE,FALSE,FALSE,FALSE,"implicit=""tree-ops.csv"""test108,invalid reference,"If the supplied value of an object property is not a string or object (eg if it is an integer), compliant applications MUST issue a warning and proceed as if the property had been specified as an object with no properties.",,FALSE,FALSE,TRUE,negative,TRUE,FALSE,FALSE,FALSE,FALSE,"implicit=""countries.csv,country_slice.csv"""test109,titles with invalid language,"Natural Language properties may be objects whose properties MUST be language codes as defined by [BCP47] and whose values are either strings or arrays, providing natural language strings in that language",,TRUE,TRUE,TRUE,invalid,TRUE,FALSE,FALSE,FALSE,FALSE,"implicit=""tree-ops.csv"""test110,titles with non-string values,"Natural Language properties may be objects whose properties MUST be language codes as defined by [BCP47] and whose values are either strings or arrays, providing natural language strings in that language",,TRUE,TRUE,TRUE,invalid,TRUE,FALSE,FALSE,FALSE,FALSE,"implicit=""tree-ops.csv"""test111,titles with invalid value,"If the supplied value of a natural language property is not a string, array or object (eg if it is an integer), compliant applications MUST issue a warning and proceed as if the property had been specified as an empty array",,TRUE,TRUE,TRUE,invalid,TRUE,FALSE,FALSE,FALSE,FALSE,"implicit=""tree-ops.csv"""test112,titles with non-string array values,"If the supplied value is an array, any items in that array that are not strings MUST be ignored",,TRUE,TRUE,TRUE,invalid,TRUE,FALSE,FALSE,FALSE,FALSE,"implicit=""tree-ops.csv"""test113,invalid suppressOutput,Atomic properties: Processors MUST issue a warning if a property is set to an invalid value type,,TRUE,TRUE,TRUE,warning,TRUE,FALSE,FALSE,FALSE,FALSE,"implicit=""tree-ops.csv"""test114,invalid name,Atomic properties: Processors MUST issue a warning if a property is set to an invalid value type,,TRUE,TRUE,TRUE,warning,TRUE,FALSE,FALSE,FALSE,FALSE,"implicit=""tree-ops.csv"""test115,invalid virtual,Atomic properties: Processors MUST issue a warning if a property is set to an invalid value type,,TRUE,TRUE,TRUE,warning,TRUE,FALSE,FALSE,FALSE,FALSE,"implicit=""tree-ops.csv"""test116,file-metadata with query component,processors MUST attempt to locate a file-specific metadata document. This method MUST NOT be used if the URL of the tabular data file contains a query component.,,TRUE,TRUE,TRUE,,FALSE,FALSE,FALSE,FALSE,FALSE,"action=""test116.csv?query"" implicit=""test116.csv-metadata.json"""test117,file-metadata not referencing file,If the metadata file found at this location does not explicitly include a reference to the requested tabular data file then it must be ignored.,,TRUE,TRUE,TRUE,warning,FALSE,FALSE,FALSE,TRUE,FALSE,"action=""test117.csv"""test118,directory-metadata with query component,processors MUST attempt to locate a directory-level metadata document. This method MUST NOT be used if the URL of the tabular data file contains a query component.,,TRUE,TRUE,TRUE,,FALSE,FALSE,FALSE,FALSE,TRUE,"action=""test118/action.csv?query"""test119,directory-metadata not referencing file,If the metadata file found at this location does not explicitly include a reference to the requested tabular data file then it must be ignored.,,TRUE,TRUE,TRUE,warning,FALSE,FALSE,FALSE,FALSE,TRUE,"action=""test119/action.csv"""test120,link-metadata not referencing file,If the metadata file found at this location does not explicitly include a reference to the requested tabular data file then it MUST be ignored.,,TRUE,TRUE,TRUE,warning,FALSE,FALSE,TRUE,FALSE,FALSE,"action=""test120.csv"""test121,user-metadata not referencing file,User-specified metadata does not need to reference the starting CSV,,TRUE,TRUE,TRUE,,FALSE,TRUE,FALSE,FALSE,FALSE,"implicit=""test121-ref.csv"""test122,link-metadata not describing file uses file-metadata,If the metadata file found at this location does not explicitly include a reference to the requested tabular data file then it MUST be ignored.,,TRUE,TRUE,TRUE,,FALSE,FALSE,TRUE,TRUE,FALSE,test123,file-metadata not describing file uses directory-metadata,If the metadata file found at this location does not explicitly include a reference to the requested tabular data file then it MUST be ignored.,,TRUE,TRUE,TRUE,,FALSE,FALSE,FALSE,TRUE,TRUE,test0124,metadata with columns not matching csv titles,"If not validating, and one schema has a name property but not a titles property, and the other has a titles property but not a name property.",,TRUE,TRUE,TRUE,invalid,FALSE,TRUE,FALSE,FALSE,FALSE,"action=""tree-ops.csv"""test125,invalid datatype string,"If the value of the datatype property is a string, it must be one of the built-in datatypes",,FALSE,FALSE,TRUE,invalid,TRUE,FALSE,FALSE,FALSE,FALSE,"implicit=""tree-ops.csv"""